# name: Deploy to DigitalOcean Droplet
# on:
#   push:
#     branches: [ main ]

# permissions:
#   contents: read
#   packages: write

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash

#     steps:
#       - uses: actions/checkout@v4

#       # 1) Compute a lowercase GHCR image name once (owner/repo:sha-<commit>)
#       - name: Compute image name
#         id: meta
#         run: |
#           REPO_LC="${GITHUB_REPOSITORY,,}"                      # owner/repo -> lowercase
#           echo "image=ghcr.io/${REPO_LC}:sha-${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

#       # 2) Build & push the image to GHCR
#       - name: Build and push image
#         run: |
#           echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
#           docker build -t "${{ steps.meta.outputs.image }}" .
#           docker push "${{ steps.meta.outputs.image }}"

#       # 3) SSH into the Droplet and redeploy with the new image tag
#       - name: SSH redeploy on Droplet
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.DO_HOST }}
#           username: ${{ secrets.DO_USER }}
#           key: ${{ secrets.DO_SSH_KEY }}
#           # If you're using 443 for SSH, set a DO_SSH_PORT secret to 443. Otherwise, remove this line.
#           port: ${{ secrets.DO_SSH_PORT }}
#           script: |
#             set -euo pipefail
#             IMAGE="${{ steps.meta.outputs.image }}"
#             FILE="/opt/nextapp/docker-compose.yml"

#             # login & pull the new image
#             docker login ghcr.io -u "${{ github.actor }}" -p "${{ secrets.GITHUB_TOKEN }}"
#             docker pull "$IMAGE"

#             # Replace the image line in compose (use POSIX class, not \s)
#             if grep -qE '^[[:space:]]*image:' "$FILE"; then
#               sed -i "s#^[[:space:]]*image: .*#    image: $IMAGE#" "$FILE"
#             else
#               # fallback: inject image under 'web:' if missing (simple append)
#               echo "    image: $IMAGE" >> "$FILE"
#             fi

#             docker compose -f "$FILE" up -d --force-recreate
#             docker image prune -f



# .github/workflows/deploy.yml
name: Deploy to DigitalOcean Droplet
on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Compute image repo (lowercase)
        id: meta
        run: |
          echo "repo_lc=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - name: Build & push image (:latest and :sha)
        run: |
          IMAGE="${{ steps.meta.outputs.repo_lc }}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker build -t "$IMAGE:latest" -t "$IMAGE:sha-${GITHUB_SHA}" .
          docker push "$IMAGE:latest"
          docker push "$IMAGE:sha-${GITHUB_SHA}"

      - name: SSH pull repo & redeploy from repo compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_SSH_PORT }}
          script: |
            set -e
            APP_DIR=/opt/nextapp/app
            REPO="${{ github.repository }}"
            IMAGE="ghcr.io/${REPO,,}:latest"

            # one-time clone; thereafter just pull latest
            if [ ! -d "$APP_DIR/.git" ]; then
              mkdir -p /opt/nextapp
              git clone "https://github.com/$REPO" "$APP_DIR"
            fi

            cd "$APP_DIR"
            git fetch origin
            git reset --hard origin/main

            docker login ghcr.io -u "${{ github.actor }}" -p "${{ secrets.GITHUB_TOKEN }}"
            docker pull "$IMAGE"
            docker compose pull
            docker compose up -d --force-recreate --remove-orphans
